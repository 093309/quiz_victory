export const dateCard = [
  {
    id: 1,
    title: 'Типы данных',
    body: 'Есть восемь основных типов данных в JavaScript. В этой главе мы рассмотрим их в общем, а в следующих главах поговорим подробнее о каждом.',
    info: [{
      subTitle: 'Число',
      description: 'Числовой тип данных (number) представляет как целочисленные значения, так и числа с плавающей точкой.'
    },
    {
      subTitle: 'Строка',
      description: 'Строка (string) в JavaScript должна быть заключена в кавычки.'
    },
    {
      subTitle: 'Логический тип',
      description: 'Булевый тип (boolean) может принимать только два значения: true (истина) и false (ложь). Такой тип, как правило, используется для хранения значений да/нет:true значит «да, правильно», а false значит «нет, не правильно».'
    },
    {
      subTitle: 'Знаачение "null"',
      description: 'Специальное значение null не относится ни к одному из типов, описанных выше. Оно формирует отдельный тип, который содержит только значение null. В JavaScript null не является «ссылкой на несуществующий объект» или «нулевым указателем», как в некоторых других языках. Это просто специальное значение, которое представляет собой «ничего», «пусто» или «значение неизвестно». В приведённом выше коде указано, что значение переменной age неизвестно.'
    },
    {
      subTitle: 'Знаачение "undefiend"',
      description: ' Специальное значение undefined также стоит особняком. Оно формирует тип из самого  себя так же, как и null. Оно означает, что «значение не было присвоено». Если переменная объявлена, но ей не присвоено никакого значения, то её значением будет undefined.'
    },
    {
      subTitle: 'Объекты и символы',
      description: 'Тип object (объект) – особенный. Все остальные типы называются «примитивными», потому что их значениями могут быть только простые значения (будь то строка, или число, или что-то ещё). В объектах же хранят коллекции данных или более сложные структуры. Объекты занимают важное место в языке и требуют особого внимания. Мы разберёмся с ними в главе Объекты после того, как узнаем больше о примитивах. Тип symbol (символ) используется для создания уникальных идентификаторов в объектах. Мы упоминаем здесь о нём для полноты картины, изучим этот тип после объектов'
    },
    ]
  },
  {
    id: 2,
    title: 'Lorem',
    body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Perferendis, hic.',
    info: [{},{},{}],
  },
  {
    id: 3,
    title: 'Lorem',
    body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Perferendis, hic.',
    info: [{},{},{}],
  },
  {
    id: 4,
    title: 'Lorem',
    body: 'Lorem ipsum, dolor sit amet consectetur adipisicing elit. Perferendis, hic.',
    info: [{},{},{}],
  },
]
export default dateCard;